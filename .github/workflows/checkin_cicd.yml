# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: checkin on github

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-24.04, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            cmake_workflow_preset_name: cicd_on_windows
          - os: ubuntu-24.04
            c_compiler: gcc
            cpp_compiler: g++
            cmake_workflow_preset_name: cicd_on_linux
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-24.04
            c_compiler: cl

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: set up ninja
      uses: ashutoshvarma/setup-ninja@v1.1

    - name: set up vcpkg
      uses: lukka/run-vcpkg@v11.2
      with:
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg
        vcpkgGitCommitId: 68d349964cb4e8da561fd849d9491e6ba11c5681

    - name: config, build and test
      uses: lukka/run-cmake@v10.8
      with: 
        workflowPreset: ${{ matrix.cmake_workflow_preset_name }}
        configurePresetAdditionalArgs: "['-DCICD_ENABLE=ON']"
      env:
        VCPKG_ROOT: ${{ runner.workspace }}/vcpkg
